{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","pages/App/App.js","reportWebVitals.js","index.js","components/CircleSelector/CircleSelector.module.css","components/Circles/Circles.module.css"],"names":["CircleSelector","props","idx","className","styles","selButton","map","selButtonIdx","selected","onClick","handleClick","Circles","App","setState","handleSelect","state","getInitialState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"kRAaiBA,EAXM,SAACC,EAAOC,GAAR,OACnB,qBAAKC,UAAWC,IAAOJ,eAAvB,SACI,8BACKC,EAAMI,UAAUC,KAAI,SAAAD,GAAS,OAE9B,yBAAQF,UAAWF,EAAMM,cAAN,UAAyBF,GAAzB,UAA0CD,IAAOI,UAAa,GAAcC,QAAS,kBAAMR,EAAMS,YAAYL,IAAhI,2BAA2JA,IAAjEH,W,gBCGrFS,EARD,SAACV,EAAOC,GAAR,OACZ,qBAAKC,UAAWC,IAAOO,QAAvB,SACKV,EAAMI,UAAUC,KAAI,SAAAD,GAAS,OAC1B,qBAAKF,UAAWF,EAAMM,cAAN,UAAyBF,GAAzB,UAA0CD,IAAOI,UAAa,GAA9E,SAA6FH,GAANH,SCA7FG,G,MAAY,CAAC,IAAI,IAAI,IAAI,MA6ChBO,E,kDA1CX,aAAe,IAAD,8BACV,gBAYJF,YAAc,SAACL,GACX,EAAKQ,SAAS,CAACN,aAAcF,KAdnB,EAiBdS,aAAe,SAACZ,GACZ,EAAKW,SAAS,CAACN,aAAcL,KAhB7B,EAAKa,MAAL,eACK,EAAKC,mBAHA,E,mDAOZ,WACE,MAAO,CACHT,aAAc,K,oBAaxB,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CACCE,UAAWA,EACXE,aAAgBU,KAAKF,MAAMR,aAC3BG,YAAeO,KAAKP,cAErB,cAAC,EAAD,CACEL,UAAWA,EACXE,aAAgBU,KAAKF,MAAMR,yB,GAnCrBW,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K,kBCbAa,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,SAAW,mC,kBCArFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,6B","file":"static/js/main.ee38fc43.chunk.js","sourcesContent":["import styles from './CircleSelector.module.css';\n\nconst CircleSelector = (props, idx) => (\n    <div className={styles.CircleSelector}>\n        <div>\n            {props.selButton.map(selButton =>\n            \n            <button className={props.selButtonIdx == `${selButton}` ? `${styles.selected}` : ''} key={idx} onClick={() => props.handleClick(selButton)}>Select Circle {selButton}</button>\n            )}\n        </div> \n    </div>\n  );\n  \n  export default CircleSelector;\n  ","import styles from './Circles.module.css';\n\nconst Circles = (props, idx) => (\n    <div className={styles.Circles}>  \n        {props.selButton.map(selButton =>\n            <div className={props.selButtonIdx == `${selButton}` ? `${styles.selected}` : ''} key={idx}>{selButton}</div>\n            )}\n    </div>\n  );\n  \n  export default Circles;\n  ","import React, { Component } from 'react';\nimport CircleSelector from '../../components/CircleSelector/CircleSelector';\nimport Circles from '../../components/Circles/Circles';\nimport './App.css';\n\nconst selButton = ['1','2','3','4'];\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n          ...this.getInitialState()\n        };\n      }\n    \n      getInitialState() {\n        return {\n            selButtonIdx: 1\n        };\n      }\n\n    handleClick = (selButton) => {\n        this.setState({selButtonIdx: selButton});\n      }\n    \n    handleSelect = (idx) => {\n        this.setState({selButtonIdx: idx});\n    }\n    \n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector \n           selButton={selButton}\n           selButtonIdx = {this.state.selButtonIdx}\n           handleClick = {this.handleClick}\n          />\n          <Circles \n            selButton={selButton}\n            selButtonIdx = {this.state.selButtonIdx}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CircleSelector\":\"CircleSelector_CircleSelector__cYEEt\",\"selected\":\"CircleSelector_selected__28CLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Circles\":\"Circles_Circles__7y7Ym\",\"selected\":\"Circles_selected__-ujHJ\"};"],"sourceRoot":""}